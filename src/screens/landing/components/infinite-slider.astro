---
export interface Slide {
	image: string;
	name: string;
	url: string;
}
interface Props {
	slides: Slide[];
}
const { slides } = Astro.props;
---

<style>
	@keyframes infinite-slider {
		0% {
			transform: translateX(0%);
		}
		100% {
			transform: translateX(-50%);
		}
	}

	.s-slider__items {
		animation: infinite-slider linear infinite 10s;
	}
	.s-slider__container {
		mask-image: linear-gradient(
			to right,
			transparent,
			black theme(spacing.20),
			black calc(100% - theme(spacing.20)),
			transparent
		);
		mask-mode: xor;
	}
	.s-sr-only {
		position: absolute;
		left: -10000px;
		top: auto;
		overflow: hidden;
	}
</style>
<ul class="s-sr-only">
	{
		slides.map((slide) => (
			<li>
				<a href={slide.url}>{slide.name}</a>
			</li>
		))
	}
</ul>
<div
	aria-hidden="true"
	class="h-40 md:h-60 lg:h-80 w-full bg-primary-200 xl:rounded-xl p-4 md:p-6 lg:p-8 xl:border-primary-950 xl:border-2"
>
	<div
		class="s-slider__container rounded h-full w-full overflow-hidden relative"
	>
		<div
			class="s-slider__items absolute flex gap-4 md:gap-6 lg:gap-8 h-full"
		>
			{
				slides.map((slide, _index) => (
					<div class="h-full aspect-square bg-primary-100 bg-opacity-70 rounded flex justify-center items-center">
						<img
							src={
								import.meta.env
									.BASE_URL +
								slide.image
							}
							alt={slide.name}
							aria-label={slide.name}
							class="h-2/3 aspect-square object-cover"
						/>
					</div>
				))
			}
		</div>
	</div>
</div>
